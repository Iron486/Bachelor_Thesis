{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>OriginTime</th>\n",
       "      <th>Time</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Depth/Km</th>\n",
       "      <th>Magnitude</th>\n",
       "      <th>MagnitudeType</th>\n",
       "      <th>RMS</th>\n",
       "      <th>AzimutalGap</th>\n",
       "      <th>ERH</th>\n",
       "      <th>ERZ</th>\n",
       "      <th>DistSeismometer</th>\n",
       "      <th>NPH</th>\n",
       "      <th>Column14</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>23.85</td>\n",
       "      <td>81-01-01-09:29</td>\n",
       "      <td>42.4796</td>\n",
       "      <td>12.4790</td>\n",
       "      <td>8.90</td>\n",
       "      <td>3.0</td>\n",
       "      <td>MCSTI</td>\n",
       "      <td>0.0917</td>\n",
       "      <td>123</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.8</td>\n",
       "      <td>47</td>\n",
       "      <td>16</td>\n",
       "      <td>81EV00002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12.76</td>\n",
       "      <td>81-01-03-07:38</td>\n",
       "      <td>40.4046</td>\n",
       "      <td>11.2950</td>\n",
       "      <td>20.37</td>\n",
       "      <td>2.7</td>\n",
       "      <td>MCSTI</td>\n",
       "      <td>1.1770</td>\n",
       "      <td>313</td>\n",
       "      <td>2.4</td>\n",
       "      <td>0.4</td>\n",
       "      <td>162</td>\n",
       "      <td>11</td>\n",
       "      <td>81EV00015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>50.09</td>\n",
       "      <td>81-01-09-00:12</td>\n",
       "      <td>40.3708</td>\n",
       "      <td>15.4209</td>\n",
       "      <td>20.18</td>\n",
       "      <td>4.1</td>\n",
       "      <td>MCSTI</td>\n",
       "      <td>0.2448</td>\n",
       "      <td>267</td>\n",
       "      <td>2.6</td>\n",
       "      <td>8.5</td>\n",
       "      <td>34</td>\n",
       "      <td>79</td>\n",
       "      <td>81EV00045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>21.13</td>\n",
       "      <td>81-01-09-03:19</td>\n",
       "      <td>42.1450</td>\n",
       "      <td>12.5822</td>\n",
       "      <td>0.45</td>\n",
       "      <td>2.7</td>\n",
       "      <td>MCSTI</td>\n",
       "      <td>0.0861</td>\n",
       "      <td>134</td>\n",
       "      <td>0.3</td>\n",
       "      <td>1.4</td>\n",
       "      <td>29</td>\n",
       "      <td>8</td>\n",
       "      <td>81EV00048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>45.66</td>\n",
       "      <td>81-01-15-11:12</td>\n",
       "      <td>40.5165</td>\n",
       "      <td>15.3831</td>\n",
       "      <td>17.50</td>\n",
       "      <td>4.1</td>\n",
       "      <td>MCSTI</td>\n",
       "      <td>0.5263</td>\n",
       "      <td>130</td>\n",
       "      <td>0.3</td>\n",
       "      <td>1.3</td>\n",
       "      <td>66</td>\n",
       "      <td>90</td>\n",
       "      <td>81EV00061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39660</th>\n",
       "      <td>39.78</td>\n",
       "      <td>21-23-00-70:8</td>\n",
       "      <td>37.5372</td>\n",
       "      <td>14.0464</td>\n",
       "      <td>3.69</td>\n",
       "      <td>2.3</td>\n",
       "      <td>MlREG</td>\n",
       "      <td>0.0241</td>\n",
       "      <td>252</td>\n",
       "      <td>99.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>02EV11401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39661</th>\n",
       "      <td>24.32</td>\n",
       "      <td>21-23-00-74:3</td>\n",
       "      <td>37.5244</td>\n",
       "      <td>14.0633</td>\n",
       "      <td>1.17</td>\n",
       "      <td>2.2</td>\n",
       "      <td>MlREG</td>\n",
       "      <td>0.0345</td>\n",
       "      <td>271</td>\n",
       "      <td>99.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>02EV11402</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39662</th>\n",
       "      <td>11.79</td>\n",
       "      <td>21-23-01-45:8</td>\n",
       "      <td>41.3900</td>\n",
       "      <td>14.4935</td>\n",
       "      <td>4.81</td>\n",
       "      <td>1.9</td>\n",
       "      <td>MlREG</td>\n",
       "      <td>0.3843</td>\n",
       "      <td>145</td>\n",
       "      <td>0.8</td>\n",
       "      <td>9.0</td>\n",
       "      <td>34</td>\n",
       "      <td>8</td>\n",
       "      <td>02EV11404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39663</th>\n",
       "      <td>19.42</td>\n",
       "      <td>21-23-01-84:0</td>\n",
       "      <td>41.3689</td>\n",
       "      <td>14.5429</td>\n",
       "      <td>0.05</td>\n",
       "      <td>1.9</td>\n",
       "      <td>MlREG</td>\n",
       "      <td>0.4518</td>\n",
       "      <td>127</td>\n",
       "      <td>0.2</td>\n",
       "      <td>2.4</td>\n",
       "      <td>30</td>\n",
       "      <td>15</td>\n",
       "      <td>02EV11405</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39664</th>\n",
       "      <td>37.97</td>\n",
       "      <td>21-23-12-11:1</td>\n",
       "      <td>37.4884</td>\n",
       "      <td>14.1493</td>\n",
       "      <td>11.31</td>\n",
       "      <td>2.8</td>\n",
       "      <td>MlMDN</td>\n",
       "      <td>0.1085</td>\n",
       "      <td>116</td>\n",
       "      <td>0.9</td>\n",
       "      <td>2.4</td>\n",
       "      <td>21</td>\n",
       "      <td>17</td>\n",
       "      <td>02EV11409</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>39665 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       OriginTime            Time  Latitude  Longitude  Depth/Km  Magnitude  \\\n",
       "0           23.85  81-01-01-09:29   42.4796    12.4790      8.90        3.0   \n",
       "1           12.76  81-01-03-07:38   40.4046    11.2950     20.37        2.7   \n",
       "2           50.09  81-01-09-00:12   40.3708    15.4209     20.18        4.1   \n",
       "3           21.13  81-01-09-03:19   42.1450    12.5822      0.45        2.7   \n",
       "4           45.66  81-01-15-11:12   40.5165    15.3831     17.50        4.1   \n",
       "...           ...             ...       ...        ...       ...        ...   \n",
       "39660       39.78   21-23-00-70:8   37.5372    14.0464      3.69        2.3   \n",
       "39661       24.32   21-23-00-74:3   37.5244    14.0633      1.17        2.2   \n",
       "39662       11.79   21-23-01-45:8   41.3900    14.4935      4.81        1.9   \n",
       "39663       19.42   21-23-01-84:0   41.3689    14.5429      0.05        1.9   \n",
       "39664       37.97   21-23-12-11:1   37.4884    14.1493     11.31        2.8   \n",
       "\n",
       "      MagnitudeType     RMS  AzimutalGap   ERH   ERZ  DistSeismometer  NPH  \\\n",
       "0             MCSTI  0.0917          123   0.6   2.8               47   16   \n",
       "1             MCSTI  1.1770          313   2.4   0.4              162   11   \n",
       "2             MCSTI  0.2448          267   2.6   8.5               34   79   \n",
       "3             MCSTI  0.0861          134   0.3   1.4               29    8   \n",
       "4             MCSTI  0.5263          130   0.3   1.3               66   90   \n",
       "...             ...     ...          ...   ...   ...              ...  ...   \n",
       "39660         MlREG  0.0241          252  99.0  99.0                5    6   \n",
       "39661         MlREG  0.0345          271  99.0  99.0                8    6   \n",
       "39662         MlREG  0.3843          145   0.8   9.0               34    8   \n",
       "39663         MlREG  0.4518          127   0.2   2.4               30   15   \n",
       "39664         MlMDN  0.1085          116   0.9   2.4               21   17   \n",
       "\n",
       "        Column14  \n",
       "0      81EV00002  \n",
       "1      81EV00015  \n",
       "2      81EV00045  \n",
       "3      81EV00048  \n",
       "4      81EV00061  \n",
       "...          ...  \n",
       "39660  02EV11401  \n",
       "39661  02EV11402  \n",
       "39662  02EV11404  \n",
       "39663  02EV11405  \n",
       "39664  02EV11409  \n",
       "\n",
       "[39665 rows x 14 columns]"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "a=pd.read_csv('dataframe_fromCTI11.csv')\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "individuato\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>OriginTime</th>\n",
       "      <th>Time</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Depth/Km</th>\n",
       "      <th>Magnitude</th>\n",
       "      <th>MagnitudeType</th>\n",
       "      <th>RMS</th>\n",
       "      <th>AzimutalGap</th>\n",
       "      <th>ERH</th>\n",
       "      <th>ERZ</th>\n",
       "      <th>DistSeismometer</th>\n",
       "      <th>NPH</th>\n",
       "      <th>Column14</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>31122</th>\n",
       "      <td>39.32</td>\n",
       "      <td>10-10-34-7:</td>\n",
       "      <td>38.2134</td>\n",
       "      <td>12.2380</td>\n",
       "      <td>2.16</td>\n",
       "      <td>3.2</td>\n",
       "      <td>MlMDN</td>\n",
       "      <td>0.1623</td>\n",
       "      <td>228</td>\n",
       "      <td>8.1</td>\n",
       "      <td>16.7</td>\n",
       "      <td>39</td>\n",
       "      <td>19</td>\n",
       "      <td>00EV00005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31123</th>\n",
       "      <td>1.82</td>\n",
       "      <td>10-10-71-3:</td>\n",
       "      <td>37.3477</td>\n",
       "      <td>14.4424</td>\n",
       "      <td>13.30</td>\n",
       "      <td>2.5</td>\n",
       "      <td>MlREG</td>\n",
       "      <td>0.2836</td>\n",
       "      <td>287</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.3</td>\n",
       "      <td>28</td>\n",
       "      <td>11</td>\n",
       "      <td>00EV00030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31124</th>\n",
       "      <td>9.26</td>\n",
       "      <td>10-10-72-6:</td>\n",
       "      <td>37.3096</td>\n",
       "      <td>15.5638</td>\n",
       "      <td>9.38</td>\n",
       "      <td>2.2</td>\n",
       "      <td>MlREG</td>\n",
       "      <td>0.0689</td>\n",
       "      <td>231</td>\n",
       "      <td>6.8</td>\n",
       "      <td>99.0</td>\n",
       "      <td>58</td>\n",
       "      <td>8</td>\n",
       "      <td>00EV00031</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31125</th>\n",
       "      <td>38.82</td>\n",
       "      <td>10-11-20-4:</td>\n",
       "      <td>38.2222</td>\n",
       "      <td>11.5144</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.4</td>\n",
       "      <td>MlREG</td>\n",
       "      <td>0.7591</td>\n",
       "      <td>296</td>\n",
       "      <td>15.5</td>\n",
       "      <td>99.0</td>\n",
       "      <td>60</td>\n",
       "      <td>8</td>\n",
       "      <td>00EV00040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31126</th>\n",
       "      <td>9.21</td>\n",
       "      <td>10-11-81-7:</td>\n",
       "      <td>38.1415</td>\n",
       "      <td>11.4084</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.3</td>\n",
       "      <td>MlREG</td>\n",
       "      <td>0.5877</td>\n",
       "      <td>310</td>\n",
       "      <td>3.6</td>\n",
       "      <td>5.4</td>\n",
       "      <td>64</td>\n",
       "      <td>8</td>\n",
       "      <td>00EV00047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39660</th>\n",
       "      <td>39.78</td>\n",
       "      <td>21-23-00-70:8</td>\n",
       "      <td>37.5372</td>\n",
       "      <td>14.0464</td>\n",
       "      <td>3.69</td>\n",
       "      <td>2.3</td>\n",
       "      <td>MlREG</td>\n",
       "      <td>0.0241</td>\n",
       "      <td>252</td>\n",
       "      <td>99.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>02EV11401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39661</th>\n",
       "      <td>24.32</td>\n",
       "      <td>21-23-00-74:3</td>\n",
       "      <td>37.5244</td>\n",
       "      <td>14.0633</td>\n",
       "      <td>1.17</td>\n",
       "      <td>2.2</td>\n",
       "      <td>MlREG</td>\n",
       "      <td>0.0345</td>\n",
       "      <td>271</td>\n",
       "      <td>99.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>02EV11402</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39662</th>\n",
       "      <td>11.79</td>\n",
       "      <td>21-23-01-45:8</td>\n",
       "      <td>41.3900</td>\n",
       "      <td>14.4935</td>\n",
       "      <td>4.81</td>\n",
       "      <td>1.9</td>\n",
       "      <td>MlREG</td>\n",
       "      <td>0.3843</td>\n",
       "      <td>145</td>\n",
       "      <td>0.8</td>\n",
       "      <td>9.0</td>\n",
       "      <td>34</td>\n",
       "      <td>8</td>\n",
       "      <td>02EV11404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39663</th>\n",
       "      <td>19.42</td>\n",
       "      <td>21-23-01-84:0</td>\n",
       "      <td>41.3689</td>\n",
       "      <td>14.5429</td>\n",
       "      <td>0.05</td>\n",
       "      <td>1.9</td>\n",
       "      <td>MlREG</td>\n",
       "      <td>0.4518</td>\n",
       "      <td>127</td>\n",
       "      <td>0.2</td>\n",
       "      <td>2.4</td>\n",
       "      <td>30</td>\n",
       "      <td>15</td>\n",
       "      <td>02EV11405</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39664</th>\n",
       "      <td>37.97</td>\n",
       "      <td>21-23-12-11:1</td>\n",
       "      <td>37.4884</td>\n",
       "      <td>14.1493</td>\n",
       "      <td>11.31</td>\n",
       "      <td>2.8</td>\n",
       "      <td>MlMDN</td>\n",
       "      <td>0.1085</td>\n",
       "      <td>116</td>\n",
       "      <td>0.9</td>\n",
       "      <td>2.4</td>\n",
       "      <td>21</td>\n",
       "      <td>17</td>\n",
       "      <td>02EV11409</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8543 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       OriginTime           Time  Latitude  Longitude  Depth/Km  Magnitude  \\\n",
       "31122       39.32    10-10-34-7:   38.2134    12.2380      2.16        3.2   \n",
       "31123        1.82    10-10-71-3:   37.3477    14.4424     13.30        2.5   \n",
       "31124        9.26    10-10-72-6:   37.3096    15.5638      9.38        2.2   \n",
       "31125       38.82    10-11-20-4:   38.2222    11.5144      0.00        2.4   \n",
       "31126        9.21    10-11-81-7:   38.1415    11.4084      0.00        2.3   \n",
       "...           ...            ...       ...        ...       ...        ...   \n",
       "39660       39.78  21-23-00-70:8   37.5372    14.0464      3.69        2.3   \n",
       "39661       24.32  21-23-00-74:3   37.5244    14.0633      1.17        2.2   \n",
       "39662       11.79  21-23-01-45:8   41.3900    14.4935      4.81        1.9   \n",
       "39663       19.42  21-23-01-84:0   41.3689    14.5429      0.05        1.9   \n",
       "39664       37.97  21-23-12-11:1   37.4884    14.1493     11.31        2.8   \n",
       "\n",
       "      MagnitudeType     RMS  AzimutalGap   ERH   ERZ  DistSeismometer  NPH  \\\n",
       "31122         MlMDN  0.1623          228   8.1  16.7               39   19   \n",
       "31123         MlREG  0.2836          287   1.0   2.3               28   11   \n",
       "31124         MlREG  0.0689          231   6.8  99.0               58    8   \n",
       "31125         MlREG  0.7591          296  15.5  99.0               60    8   \n",
       "31126         MlREG  0.5877          310   3.6   5.4               64    8   \n",
       "...             ...     ...          ...   ...   ...              ...  ...   \n",
       "39660         MlREG  0.0241          252  99.0  99.0                5    6   \n",
       "39661         MlREG  0.0345          271  99.0  99.0                8    6   \n",
       "39662         MlREG  0.3843          145   0.8   9.0               34    8   \n",
       "39663         MlREG  0.4518          127   0.2   2.4               30   15   \n",
       "39664         MlMDN  0.1085          116   0.9   2.4               21   17   \n",
       "\n",
       "        Column14  \n",
       "31122  00EV00005  \n",
       "31123  00EV00030  \n",
       "31124  00EV00031  \n",
       "31125  00EV00040  \n",
       "31126  00EV00047  \n",
       "...          ...  \n",
       "39660  02EV11401  \n",
       "39661  02EV11402  \n",
       "39662  02EV11404  \n",
       "39663  02EV11405  \n",
       "39664  02EV11409  \n",
       "\n",
       "[8543 rows x 14 columns]"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import datetime\n",
    "import warnings\n",
    "warnings.simplefilter(action='ignore', category=FutureWarning)\n",
    "sns.set(style=\"darkgrid\")\n",
    "time=a['Time']\n",
    "magnitude=a['Magnitude']\n",
    "zero='0'\n",
    "#time_plot=[ datetime.datetime.strptime(z, '%y-%m-%d-%H:%M') for z in time]\n",
    "#plot=plt.scatter(time_plot, magnitude, color='black',s=1)# palette= sets the colour of hue\n",
    " #plot.set(yscale=\"log\")\n",
    "#plt.xlim([np.min(time_plot), np.max(time_plot)])  \n",
    "#plt.xticks(np.arange(1,10000, 5000)) #authomatically it considers dates\n",
    "#plt.xlabel('Time')\n",
    "#plt.ylabel('Magnitude')\n",
    "time[31121] #cutoff\n",
    "a2=a[a.index <= 31121]\n",
    "a_non=a[a.index > 31121]\n",
    "#very dirty data after 2000\n",
    "function= lambda x: str(zero)+ x\n",
    "#a2=a_non.loc[:,'Time'].map(function)\n",
    "#a2=pd.concat([a,a_non2],axis=0)\n",
    "#plot=plt.scatter(time_plot, magnitude, color='black',s=1)# palette= sets the colour of hue\n",
    "for i in range(len(a2.index)):\n",
    "    #print(i)\n",
    "    if a2['Time'].iloc[i] =='86-05-00-00:28':\n",
    "        print('individuato')\n",
    "        a_dropped=a2.drop(i) #rename the dataframe.If not strange things are going to happen\n",
    "#time_plot=[ datetime.datetime.strptime(z, '%y-%m-%d-%H:%M') for z in a_dropped['Time']]# 31116\n",
    "#plot=plt.scatter(time_plot, a_dropped['Magnitude'], color='black',s=1)# palette= sets the colour of hue\n",
    "#plt.xlabel('Time')\n",
    "#plt.ylabel('Magnitude')\n",
    "a_non"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.JointGrid at 0x167aada5b88>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "a_dropped['Magnitude']=magnitude\n",
    "bin_magnitude=pd.Series(np.array(np.arange(np.min(magnitude),np.max(magnitude)+0.2,0.2)))\n",
    "number_of_earthquakes= pd.Series(np.array([np.count_nonzero((magnitude >= i ) & (magnitude <= i+0.2))\n",
    "                                           for i in bin_magnitude]))\n",
    "bin_magnitude=np.add(bin_magnitude,0.1)\n",
    "number_of_earthquakes\n",
    "sns.jointplot(x=\"Longitude\", y=\"Latitude\", data=a, kind='hex', color='r') #number of events are represented by shades of red"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x167fd3cd708>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "a_dropped['Time']=time_plot\n",
    "#a_dropped['Time']\n",
    "  #plot=plt.scatter(time_plot,, color='black',s=1)# palette= sets the colour of hue\n",
    "b=a_dropped.sort_values(by='Time')\n",
    "count=pd.Series([1 for i in range(len(a))])\n",
    "count.name='Count'\n",
    "b=pd.concat([b,count],axis=1)\n",
    "b=b['Count'].groupby(b['Time'])\n",
    "b_sum=pd.Series(b.sum())\n",
    "#sns.distplot(b_sum,kde=False) # frequency of earthquakes per count\n",
    "#b_sum.index().tolist(b_sum)\n",
    "b_sum_index=b_sum.index.values\n",
    "#IMPORTANT !!!!\n",
    "#for a small area in which many earthquakes occured\n",
    "#plt.bar(b_sum_index,b_sum,edgecolor='navy') #edgecolor: bar color\n",
    "#plt.xlabel('Time')\n",
    "#plt.ylabel('N. of erathquakes')\n",
    "sns.distplot(b_sum_index,bins=100,color='blue',kde=False)\n",
    "#.set_edgecolor(graph, 'blue')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
